package com.kk.data

import android.util.Log
import org.w3c.dom.Element
import org.w3c.dom.Node
import javax.xml.parsers.DocumentBuilderFactory

class URLUtil {
    companion object {
        fun fetchAndParseEvents(xmlUrl: String): List<Event> {
            Log.d("URLUtil", "Fetching events")
            return parseEvents(xmlUrl)
        }

        private fun parseEvents(xml: String): List<Event> {
            Log.d("URLUtil", "Parsing events")
            val events = mutableListOf<Event>()
            val dbFactory = DocumentBuilderFactory.newInstance()
            val dBuilder = dbFactory.newDocumentBuilder()
            val doc = dBuilder.parse(xml.byteInputStream(Charsets.UTF_8))
            val items = doc.getElementsByTagName("item")
            Log.d("URLUtil", "Number of items: ${items.length}")

            for (i in 0 until 10) {
                Log.d("URLUtil", "Item $i")
                val node = items.item(i)
                if (node.nodeType == Node.ELEMENT_NODE) {
                    val element = node as Element
                    var title = element.getElementsByTagName("title").item(0).textContent
//                    if(title.contains(":")) {
//                        title = title.substringAfter(title,":")
//                    }

                    val description=
                        element.getElementsByTagName("description").item(0).textContent
                    val link = element.getElementsByTagName("link").item(0).textContent
                    val pubDate = element.getElementsByTagName("pubDate").item(0).textContent
                    val dateTime = TimeUtil.getDateInt(pubDate)

                    // Assuming the ID is autogenerated, set it to 0
                    val event = Event(0, title, link, dateTime, description, false)
                    events.add(event)
                    Log.d("URLUtil", "$event")
                }
            }
            return events
        }
    }
}
